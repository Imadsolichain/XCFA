// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  firstname String
  lastname  String
  role      Role     @default(CFA_ADMIN)
  createdAt DateTime @default(now())
  // Relations
  cfa        CFA?      @relation(fields: [cfaId], references: [id])
  cfaId      String?
  entreprise Entreprise? @relation(fields: [entrepriseId], references: [id])
  entrepriseId String?
  apprenant  Apprenant?
  contrats   Contrat[]
  conventions Convention[]
  notifications Notification[]
  evenements Evenement[]
}

model CFA {
  id      String   @id @default(cuid())
  name    String
  users   User[]
  createdAt DateTime @default(now())
}

model Entreprise {
  id      String   @id @default(cuid())
  name    String
  users   User[]
  createdAt DateTime @default(now())
}

model Apprenant {
  id      String   @id @default(cuid())
  user    User     @relation(fields: [userId], references: [id])
  userId  String   @unique
  dateNaissance DateTime?
  createdAt DateTime @default(now())
}

model Contrat {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  type      String
  statut    String
  createdAt DateTime @default(now())
}

model Convention {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  sujet     String
  createdAt DateTime @default(now())
}

model Evenement {
  id        String   @id @default(cuid())
  type      String
  message   String
  user      User?    @relation(fields: [userId], references: [id])
  userId    String?
  createdAt DateTime @default(now())
}

model Notification {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   String
  lu        Boolean  @default(false)
  createdAt DateTime @default(now())
}

enum Role {
  CFA_ADMIN
  ENTREPRISE
  APPRENANT
  OPCO
  SUPERADMIN
}
